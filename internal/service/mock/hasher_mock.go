// Code generated by MockGen. DO NOT EDIT.
// Source: noteApp/internal/service (interfaces: HasherI)

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHasherI is a mock of HasherI interface.
type MockHasherI struct {
	ctrl     *gomock.Controller
	recorder *MockHasherIMockRecorder
}

// MockHasherIMockRecorder is the mock recorder for MockHasherI.
type MockHasherIMockRecorder struct {
	mock *MockHasherI
}

// NewMockHasherI creates a new mock instance.
func NewMockHasherI(ctrl *gomock.Controller) *MockHasherI {
	mock := &MockHasherI{ctrl: ctrl}
	mock.recorder = &MockHasherIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHasherI) EXPECT() *MockHasherIMockRecorder {
	return m.recorder
}

// ComparePassword mocks base method.
func (m *MockHasherI) ComparePassword(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ComparePassword", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ComparePassword indicates an expected call of ComparePassword.
func (mr *MockHasherIMockRecorder) ComparePassword(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ComparePassword", reflect.TypeOf((*MockHasherI)(nil).ComparePassword), arg0, arg1)
}

// GenerateHash mocks base method.
func (m *MockHasherI) GenerateHash(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateHash", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateHash indicates an expected call of GenerateHash.
func (mr *MockHasherIMockRecorder) GenerateHash(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateHash", reflect.TypeOf((*MockHasherI)(nil).GenerateHash), arg0)
}
